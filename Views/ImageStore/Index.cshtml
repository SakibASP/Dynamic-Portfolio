@model List<SAKIB_PORTFOLIO.Models.ImageStore>

    <style>
    /* CSS styles for the image gallery */
    .image-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Adjust the width as per your preference */
        gap: 10px; /* Add spacing between images */
    }

    /* CSS styles for the individual image items */
    .image-item {
        overflow: hidden; /* Clip the image overflow if necessary */
        border: 1px solid #ddd; /* Add a border around each image */
        padding: 10px;
    }

        .image-item img {
            max-width: 100%; /* Ensure the image doesn't exceed its container */
            height: auto; /* Maintain the aspect ratio */
        }


    </style>

<h2>Image Gallery</h2>


<section>
    <div class="container-fluid p-5">
        <div class="row">
            <div class="col">
                <div class="image-gallery">
                    @foreach (var image in Model)
                    {
                        <div class="image-item">
                            <img src="@Url.Content(image.IMG_PATH)" alt="Uploaded Image" />
                            <div class="image-buttons">
                                <a href="@Url.Content(image.IMG_PATH)" download="image.jpg" class="btn btn-primary">Download</a>
                                <button class="btn btn-danger" data-image-id="@image.AUTO_ID">Delete</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Add JavaScript to handle image deletion
        document.addEventListener("DOMContentLoaded", function () {
            var deleteButtons = document.querySelectorAll(".btn-danger");

            deleteButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    var imageId = button.getAttribute("data-image-id");
                    //alert(imageId);
                    // You can use AJAX to send a request to your server to delete the image
                    // Here's a sample AJAX call using jQuery
                    $.ajax({
                        url: "/ImageStore/DeleteImage?id=" + imageId,
                        method: "POST",
                        success: function () {
                            // Remove the deleted image from the UI
                            button.closest(".image-item").remove();
                        },
                        error: function () {
                            alert("Error deleting the image.");
                        }
                    });
                });
            });
        });
    </script>
}
