<style>
    #imagePreview {
        max-width: 100%;
        max-height: 80px;
        margin-top: 10px;
        border: 1px solid white;
    }
</style>
<main id="main">
    <section>
        <div class="container">
            <div class="section-title">
                <h2>Image to text</h2>
            </div>
            <div class="mb-3">
                <input type="file" class="form-control" id="imageInput" accept="image/*">
            </div>
            <img id="imagePreview" src="" alt="Image Preview" style="display: none;">
            <!-- Area for pasting an image -->
            <div class="mb-3" id="pasteArea" style="border: 2px dashed #ccc; padding: 20px; text-align: center;">
                <p>Paste your image here</p>
            </div>
            <button class="btn btn-primary mb-3" onclick="processImage()">Process</button>
            <div class="card" style="background-color: transparent">
                <div class="card-header">
                    <button id="copyBtn" style="float: right; background-color: gray; color: white;">copy</button>
                </div>
                <div class="card-body" >
                    <textarea class="form-control" id="textOutput" readonly placeholder="Processed text will appear here..." rows="5"></textarea>
                </div>
            </div>

        </div>
    </section>
</main>

@section Scripts{
    <script>
        //priview when image selected
        document.getElementById('imageInput').addEventListener('change', function (event) {
            var file = event.target.files[0];
            if (file) {
                var reader = new FileReader();

                // When the file is read, set it as the src of the image
                reader.onload = function (e) {
                    var imagePreview = document.getElementById('imagePreview');
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block'; // Show the image
                };

                // Read the file as a data URL (base64 encoded image)
                reader.readAsDataURL(file);
            }
        });

        // Handle pasting an image into the paste area
        document.getElementById('pasteArea').addEventListener('paste', function (event) {
            var items = event.clipboardData.items;
            for (var i = 0; i < items.length; i++) {
                if (items[i].type.indexOf('image') === 0) {
                    var file = items[i].getAsFile();
                    var reader = new FileReader();

                    // When the file is read, set it as the src of the image
                    reader.onload = function (e) {
                        var imagePreview = document.getElementById('imagePreview');
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block'; // Show the image

                        // Also update the input to match the pasted file
                        var imageInput = document.getElementById('imageInput');
                        var dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        imageInput.files = dataTransfer.files;
                    };

                    // Read the file as a data URL (base64 encoded image)
                    reader.readAsDataURL(file);
                    break;
                }
            }
        });

        //copy to clipboard
        document.getElementById('copyBtn').addEventListener('click', function () {
            var textArea = document.getElementById('textOutput');

            // Check if there is any text in the textarea
            if (textArea.value.trim() === "") {
                alert("There is no text to copy.");
                return; // Stop execution if the textarea is empty
            }

            // Using Clipboard API to copy the text
            if (navigator.clipboard) {
                navigator.clipboard.writeText(textArea.value)
                    .then(() => {
                        alert("Text copied to clipboard!");
                    })
                    .catch(err => {
                        console.error('Failed to copy text using Clipboard API: ', err);
                        alert("Failed to copy text.");
                    });
            } else {
                alert("Clipboard API is not supported in your browser.");
            }
        });



        async function processImage() {
            const imageInput = document.getElementById('imageInput').files[0];
            const imageDropArea = document.getElementById('imagePreview').src;

            let formData = new FormData();

            if (imageInput) {
                formData.append('image', imageInput);
            } else if (imageDropArea) {
                const blob = await fetch(imageDropArea).then(res => res.blob());
                formData.append('image', blob, 'pastedImage.png');
            } else {
                alert('Please upload or paste an image.');
                return;
            }

            const response = await fetch('/api/ImageToText', {
                method: 'POST',
                body: formData
            });

            const text = await response.text();
            document.getElementById('textOutput').value = text;
        }
    </script>
}


